#summary Details about collections provided by ScalaCL

*Work in progress*

ScalaCL's collection use the [http://code.google.com/p/bridj/ BridJ] port of [http://code.google.com/p/javacl/ JavaCL], which has a much lower overhead than the regular JavaCL build.

Reading and writing to / from collections hence uses the [http://nativelibs4java.sourceforge.net/sites/nl4j-runtime-parent/bridj/apidocs/org/bridj/Pointer.html BridJ Pointer class] rather than NIO Buffers, but it is trivial to wrap direct NIO Buffers as BridJ Pointers and vice-versa.

= `CLArray[T]` =

See [http://code.google.com/p/nativelibs4java/source/browse/branches/OpenCL-BridJ/libraries/OpenCL/ScalaCL2/src/main/scala/scalacl/CLArray.scala]

Supports :
  * T of AnyVal types and of tuples of AnyVals or tuples (unlimited nesting of tuples up to arity 8, with AnyVal leaves)
  * map, filter

Represented as an array of component arrays (tuples components are flattened).

= `CLFilteredArray[T]` =

Composed of a `CLArray[T]` and a presence map (for now, a `CLArray[Boolean]`).

Supports
  * Same types as `CLArray[T]`
  * map, filter
  * toArray using an intermediate prefix sum array, which still has to be greatly improved
